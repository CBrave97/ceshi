plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
//    id 'org.asciidoctor.jvm.convert'
    id 'java'
//    id "com.google.cloud.tools.jib"
//    id "com.ewerk.gradle.plugins.querydsl"
}
group 'com.example'
version '1.0.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}
ext {
//    snippetsDir = file('build/generated-snippets')
//    docsSnippetsDir = file('src/docs/asciidoc/snippets')
//    docsImagesDir = file('src/docs/asciidoc/images')
//    jdkHome = System.getenv("JAVA_HOME")
    queryDslVersion = '4.3.1'
    lombokVersion = '1.18.2'
    //queryDslVersion = '4.2.1'
}
dependencies {

//    compile('chain:utils-jpa:1.0.4')
    compile('mysql:mysql-connector-java:5.1.38')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')

    // QueryDSL
    implementation("com.querydsl:querydsl-core:${queryDslVersion}")
    implementation("com.querydsl:querydsl-jpa:${queryDslVersion}")
    //关键地方(记得开启annotationProcessor)
    annotationProcessor("com.querydsl:querydsl-apt:${queryDslVersion}:jpa",
//            "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
            "org.springframework.boot:spring-boot-starter-data-jpa",
            "mysql:mysql-connector-java:5.1.38",
            "javax.annotation:javax.annotation-api:1.3.2",
            "org.projectlombok:lombok"
    )

    // Lombok（记得安装IDEA插件）
//    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation("org.projectlombok:lombok:${lombokVersion}")
    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')

}

/**** QueryDSL  ****/
//def queryDslOutput = file("$buildDir/generated/querydsl")
//def queryDslOutput = file("$buildDir/generated/source/apt/main")

//idea {
//    module {
//        sourceDirs += queryDslOutput
//        generatedSourceDirs += queryDslOutput
//    }
//}
//sourceSets {
//    main.java.srcDir queryDslOutput
//}
//task generateQueryDSL(type: JavaCompile, group: 'build') {
//    source = sourceSets.main.java
//    classpath = configurations.compileClasspath
//    options.annotationProcessorPath = configurations.annotationProcessor
//    options.compilerArgs = [
//            "-proc:only",
//            "-processor"
//    ]
//    destinationDir = queryDslOutput
//}
//compileJava.dependsOn(generateQueryDSL)
//clean {
//    delete queryDslOutput
//}
/**** end QueryDSL  ****/

bootJar{
    enabled = false
}

jar {
    enabled = true
}

